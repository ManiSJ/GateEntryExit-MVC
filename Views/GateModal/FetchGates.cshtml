@using GateEntryExit_MVC.Models.Gate
@using GateEntryExit_MVC.Models.Shared

@model dynamic

@{  
    Layout = null;
    var pageSize = 5;
    var totalPages = (int)Math.Ceiling(Model.gates.TotalCount / (double)pageSize);
}

<h3>Select a gate</h3>

<div class="form-group">
    @foreach (var gate in Model.gates.Items)
    {
        <div class="form-check">
            @if (Model.isSingleSelect)
            {
                <input class="form-check-input" name="selectedGateId" onclick="handleGateSingleSelection(this);" type="radio" value="@gate.Id" checked="@(gate.Id == Model.selectedGate)">
            }  
            else
            {
                <input class="form-check-input" name="selectedGateId" onclick="handleGateMultipleSelection(this);" type="checkbox" value="@gate.Id" checked="@(Model.selectedGates.Contains(gate.Id))">
            }
            <label class="form-check-label" id="gate-@gate.Id">@gate.Name</label>
        </div>
    }
</div>

<nav>
    <ul class="pagination justify-content-end">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item">
                <a class="page-link" onclick="showGateModal(event, '@Url.Action("FetchGates", "GateModal" , new { pageNumber = i, isSingleSelection = Model.isSingleSelect }, Context.Request.Scheme)' ,'All gates')">@i</a>
            </li>
        }
    </ul>
</nav>

