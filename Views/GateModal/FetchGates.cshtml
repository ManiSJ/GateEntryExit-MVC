@using GateEntryExit_MVC.Models.Gate
@using GateEntryExit_MVC.Models.Shared
@using System.Linq

@model dynamic

@{  
    Layout = null;
    var pageSize = 5;
    var totalPages = (int)Math.Ceiling(Model.gates.TotalCount / (double)pageSize);
}

@functions{
    bool isSelected(Guid gateId , Guid[] gateIds){
        var x = gateIds.Contains(gateId);
        return x;
    }

    static string GuidArrayToString(Guid[] guids)
    {
        string[] guidStrings = new string[guids.Length];
        for (int i = 0; i < guids.Length; i++)
        {
            guidStrings[i] = guids[i].ToString();
        }
        return string.Join(",", guidStrings);
    }
}

<h3>Select a gate</h3>

<div class="form-group">
    @foreach (var gate in Model.gates.Items)
    {
        <div class="form-check">
            @if (Model.isSingleSelect)
            {
                <input class="form-check-input" 
                    name="selectedGateId" 
                    onclick="handleGateSingleSelection(this);" 
                    type="radio" value="@gate.Id" 
                    checked="@(gate.Id == Model.selectedGate)">
            }  
            else
            {
                <input class="form-check-input" 
                    name="selectedGateId"
                       onclick="handleGateMultipleSelection(this, '@Url.Action("FetchGates", "GateModal")')"
                       type="checkbox" value="@gate.Id" 
                       checked="@(isSelected(gate.Id, Model.selectedGates))">
            }
            <label class="form-check-label" id="gate-@gate.Id">@gate.Name</label>
        </div>
    }
</div>

<nav>
    <ul class="pagination justify-content-end">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item">
                @if (Model.isSingleSelect)
                {
                    <a class="page-link" onclick="showGateModal(event, '@Url.Action("FetchGates", "GateModal" , new { pageNumber = i, isSingleSelection = Model.isSingleSelect, selectedGateValue = Model.selectedGate, Context.Request.Scheme})' ,'All gates', true, true)">@i</a>
                }
                else
                {
                    <a class="page-link" onclick="showGateModal(event, '@Url.Action("FetchGates", "GateModal" , new { pageNumber = i, isSingleSelection = Model.isSingleSelect, selectedGateValues = GuidArrayToString(Model.selectedGates)}, Context.Request.Scheme)' ,'All gates', false, true)">@i</a>
                }                
            </li>
        }
    </ul>
</nav>

